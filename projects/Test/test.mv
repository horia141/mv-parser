def A b:10
def B A
def C b:110
def D (add 1 C)
def F (add b:10z (add 3 2))
def G (cat b:10 b:11 b:01)

fsm CtlFSM[Size] [clock(1)
    	      reset(1)]
	     [r0_we(1 0)
	      r1_we(1 1)] {
    State[b:00] Reset {
	Write0
    }

    State[b:00] Write0 {
        Write0
    }
}


mod Data16to32[Size] [clock(1)
    		      reset(1)
		      data_i(Size)]
		     [data_o((mul 2 Size) (cat r0.data_o r1.data_o))] {
    Reg[Size] r0 {
	clock   clock
       	reset   reset
	data_i  data_i
	writeEn cfsm.r0_we
    }

    Reg[Size] r1 {
        clock   clock
        reset   reset
        data_i  data_i
        writeEn cfsm.r1_we
    }

    CtlFSM[10] cfsm {
        clock  clock
    	reset  reset
    }
}

